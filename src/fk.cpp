#include "Eigen/Dense"

// q is a 8x1 vector of joint positions (q_col, q_1, q_2, ...)
// result is the 4x4 homogenous transformation matrix for the right arm
void computeFKr_num(const Eigen::VectorXd& q, Eigen::Matrix4d& result) {

    Eigen::Matrix4d T_0_1, T_1_2, T_2_3, T_3_4, T_4_5, T_5_6, T_6_7, T_7_8;
    const double c0 = cos(q[0]), s0 = sin(q[0]);
    const double c1 = cos(q[1]), s1 = sin(q[1]);
    const double c2 = cos(q[2]), s2 = sin(q[2]);
    const double c3 = cos(q[3]), s3 = sin(q[3]);
    const double c4 = cos(q[4]), s4 = sin(q[4]);
    const double c5 = cos(q[5]), s5 = sin(q[5]);
    const double c6 = cos(q[6]), s6 = sin(q[6]);
    const double c7 = cos(q[7]), s7 = sin(q[7]);

    T_0_1 << -0.499762668605239*s0 + 0.000162611400954027*c0, -0.000714591514012042*s0 - 0.999999719463415*c0, 0.866162089003864*s0 - 0.000731184398274631*c0, 0.000888676*s0 - 0.0004*c0,
            0.000162611400954027*s0 + 0.499762668605239*c0, -0.999999719463415*s0 + 0.000714591514012042*c0, -0.000731184398274631*s0 - 0.866162089003864*c0, -0.0004*s0 - 0.000888676*c0,
            0.866162368511876, -0.000224570835378080, 0.499762644604254, 1.20335000000000,
            0, 0, 0, 1;

    T_1_2 << c1, -s1, 0, 0,
            s1, c1, 0, 0,
            0, 0, 1, 0.11,
            0, 0, 0, 1;

    T_2_3 << c2, 0, s2, 0.0,
            0, 1, 0, 0,
            -s2, 0, c2, 0.2005,
            0, 0, 0, 1;

    T_3_4 << c3, -s3, 0, 0,
            s3, c3, 0, 0,
            0, 0, 1, 0.2,
            0, 0, 0, 1;

    T_4_5 << c4, 0, -s4, 0.0,
            0, 1, 0, 0,
            s4, 0, c4, 0.2,
            0, 0, 0, 1;

    T_5_6 << c5, -s5, 0, 0,
            s5, c5, 0, 0,
            0, 0, 1, 0.2,
            0, 0, 0, 1;

    T_6_7 << c6, 0, s6, 0.0,
            0, 1, 0, 0,
            -s6, 0, c6, 0.19,
            0, 0, 0, 1;

    T_7_8 << c7, -s7, 0, 0,
            s7, c7, 0, 0,
            0, 0, 1, 0.078,
            0, 0, 0, 1;

    result = T_0_1 * T_1_2 * T_2_3 * T_3_4 * T_4_5 * T_5_6 * T_6_7 * T_7_8;
}

// q is a 8x1 vector of joint positions (q_col, q_1, q_2, ...)
// result is the 4x4 homogenous transformation matrix for the right arm
void computeFKr_an(const Eigen::VectorXd& q, Eigen::Matrix4d& result) {
    const double c0 = cos(q[0]), s0 = sin(q[0]);
    const double c1 = cos(q[1]), s1 = sin(q[1]);
    const double c2 = cos(q[2]), s2 = sin(q[2]);
    const double c3 = cos(q[3]), s3 = sin(q[3]);
    const double c4 = cos(q[4]), s4 = sin(q[4]);
    const double c5 = cos(q[5]), s5 = sin(q[5]);
    const double c6 = cos(q[6]), s6 = sin(q[6]);
    const double c7 = cos(q[7]), s7 = sin(q[7]);

    double m00 = (0.00073118439827463100558896380576357*c0 - 0.866162089003864044123304211098*s0)*(c2*(c7*(c4*s6 - c5*c6*s4) + s4*s5*s7) + c3*s2*(c7*(s4*s6 + c4*c5*c6) - c4*s5*s7) - s2*s3*(c5*s7 + c6*c7*s5)) - (c1*(s2*(c7*(c4*s6 - c5*c6*s4) + s4*s5*s7) - c2*c3*(c7*(s4*s6 + c4*c5*c6) - c4*s5*s7) + c2*s3*(c5*s7 + c6*c7*s5)) + s1*(s3*(c7*(s4*s6 + c4*c5*c6) - c4*s5*s7) + c3*(c5*s7 + c6*c7*s5)))*(0.00016261140095402701138092849131311*c0 - 0.49976266860523899104862266540295*s0) + (s1*(s2*(c7*(c4*s6 - c5*c6*s4) + s4*s5*s7) - c2*c3*(c7*(s4*s6 + c4*c5*c6) - c4*s5*s7) + c2*s3*(c5*s7 + c6*c7*s5)) - c1*(s3*(c7*(s4*s6 + c4*c5*c6) - c4*s5*s7) + c3*(c5*s7 + c6*c7*s5)))*(0.99999971946341503770128156247665*c0 + 0.00071459151401204201205230592819362*s0);
    double m01 = (s1*(c2*c3*(s7*(s4*s6 + c4*c5*c6) + c4*c7*s5) - s2*(s7*(c4*s6 - c5*c6*s4) - c7*s4*s5) + c2*s3*(c5*c7 - c6*s5*s7)) + c1*(s3*(s7*(s4*s6 + c4*c5*c6) + c4*c7*s5) - c3*(c5*c7 - c6*s5*s7)))*(0.99999971946341503770128156247665*c0 + 0.00071459151401204201205230592819362*s0) - (c1*(c2*c3*(s7*(s4*s6 + c4*c5*c6) + c4*c7*s5) - s2*(s7*(c4*s6 - c5*c6*s4) - c7*s4*s5) + c2*s3*(c5*c7 - c6*s5*s7)) - s1*(s3*(s7*(s4*s6 + c4*c5*c6) + c4*c7*s5) - c3*(c5*c7 - c6*s5*s7)))*(0.00016261140095402701138092849131311*c0 - 0.49976266860523899104862266540295*s0) - (0.00073118439827463100558896380576357*c0 - 0.866162089003864044123304211098*s0)*(c2*(s7*(c4*s6 - c5*c6*s4) - c7*s4*s5) + c3*s2*(s7*(s4*s6 + c4*c5*c6) + c4*c7*s5) + s2*s3*(c5*c7 - c6*s5*s7));
    double m02 = (s1*(c2*c3*(c6*s4 - c4*c5*s6) - s2*(c4*c6 + c5*s4*s6) + c2*s3*s5*s6) + c1*(s3*(c6*s4 - c4*c5*s6) - c3*s5*s6))*(0.99999971946341503770128156247665*c0 + 0.00071459151401204201205230592819362*s0) - (c1*(c2*c3*(c6*s4 - c4*c5*s6) - s2*(c4*c6 + c5*s4*s6) + c2*s3*s5*s6) - s1*(s3*(c6*s4 - c4*c5*s6) - c3*s5*s6))*(0.00016261140095402701138092849131311*c0 - 0.49976266860523899104862266540295*s0) - (0.00073118439827463100558896380576357*c0 - 0.866162089003864044123304211098*s0)*(c2*(c4*c6 + c5*s4*s6) + c3*s2*(c6*s4 - c4*c5*s6) + s2*s3*s5*s6);
    double m03 = 0.00088867600000000002754413364058905*s0 - 0.00040000000000000001916869440954372*c0 + (c1*(0.20000000000000001110223024625157*s2 + s2*(0.39000000000000001332267629550188*c4 + 0.077999999999999999888977697537484*c4*c6 + 0.077999999999999999888977697537484*c5*s4*s6 + 0.20000000000000001110223024625157) - c2*c3*(0.39000000000000001332267629550188*s4 + 0.077999999999999999888977697537484*c6*s4 - 0.077999999999999999888977697537484*c4*c5*s6) - 0.077999999999999999888977697537484*c2*s3*s5*s6) + s1*(s3*(0.39000000000000001332267629550188*s4 + 0.077999999999999999888977697537484*c6*s4 - 0.077999999999999999888977697537484*c4*c5*s6) - 0.077999999999999999888977697537484*c3*s5*s6))*(0.00016261140095402701138092849131311*c0 - 0.49976266860523899104862266540295*s0) - (s1*(0.20000000000000001110223024625157*s2 + s2*(0.39000000000000001332267629550188*c4 + 0.077999999999999999888977697537484*c4*c6 + 0.077999999999999999888977697537484*c5*s4*s6 + 0.20000000000000001110223024625157) - c2*c3*(0.39000000000000001332267629550188*s4 + 0.077999999999999999888977697537484*c6*s4 - 0.077999999999999999888977697537484*c4*c5*s6) - 0.077999999999999999888977697537484*c2*s3*s5*s6) - c1*(s3*(0.39000000000000001332267629550188*s4 + 0.077999999999999999888977697537484*c6*s4 - 0.077999999999999999888977697537484*c4*c5*s6) - 0.077999999999999999888977697537484*c3*s5*s6))*(0.99999971946341503770128156247665*c0 + 0.00071459151401204201205230592819362*s0) - (0.00073118439827463100558896380576357*c0 - 0.866162089003864044123304211098*s0)*(0.20000000000000001110223024625157*c2 + c2*(0.39000000000000001332267629550188*c4 + 0.077999999999999999888977697537484*c4*c6 + 0.077999999999999999888977697537484*c5*s4*s6 + 0.20000000000000001110223024625157) + c3*s2*(0.39000000000000001332267629550188*s4 + 0.077999999999999999888977697537484*c6*s4 - 0.077999999999999999888977697537484*c4*c5*s6) + 0.077999999999999999888977697537484*s2*s3*s5*s6 + 0.31049999999999999822364316059975);
    double m10 = (0.866162089003864044123304211098*c0 + 0.00073118439827463100558896380576357*s0)*(c2*(c7*(c4*s6 - c5*c6*s4) + s4*s5*s7) + c3*s2*(c7*(s4*s6 + c4*c5*c6) - c4*s5*s7) - s2*s3*(c5*s7 + c6*c7*s5)) - (c1*(s2*(c7*(c4*s6 - c5*c6*s4) + s4*s5*s7) - c2*c3*(c7*(s4*s6 + c4*c5*c6) - c4*s5*s7) + c2*s3*(c5*s7 + c6*c7*s5)) + s1*(s3*(c7*(s4*s6 + c4*c5*c6) - c4*s5*s7) + c3*(c5*s7 + c6*c7*s5)))*(0.49976266860523899104862266540295*c0 + 0.00016261140095402701138092849131311*s0) - (s1*(s2*(c7*(c4*s6 - c5*c6*s4) + s4*s5*s7) - c2*c3*(c7*(s4*s6 + c4*c5*c6) - c4*s5*s7) + c2*s3*(c5*s7 + c6*c7*s5)) - c1*(s3*(c7*(s4*s6 + c4*c5*c6) - c4*s5*s7) + c3*(c5*s7 + c6*c7*s5)))*(0.00071459151401204201205230592819362*c0 - 0.99999971946341503770128156247665*s0);
    double m11 = - (0.866162089003864044123304211098*c0 + 0.00073118439827463100558896380576357*s0)*(c2*(s7*(c4*s6 - c5*c6*s4) - c7*s4*s5) + c3*s2*(s7*(s4*s6 + c4*c5*c6) + c4*c7*s5) + s2*s3*(c5*c7 - c6*s5*s7)) - (c1*(c2*c3*(s7*(s4*s6 + c4*c5*c6) + c4*c7*s5) - s2*(s7*(c4*s6 - c5*c6*s4) - c7*s4*s5) + c2*s3*(c5*c7 - c6*s5*s7)) - s1*(s3*(s7*(s4*s6 + c4*c5*c6) + c4*c7*s5) - c3*(c5*c7 - c6*s5*s7)))*(0.49976266860523899104862266540295*c0 + 0.00016261140095402701138092849131311*s0) - (s1*(c2*c3*(s7*(s4*s6 + c4*c5*c6) + c4*c7*s5) - s2*(s7*(c4*s6 - c5*c6*s4) - c7*s4*s5) + c2*s3*(c5*c7 - c6*s5*s7)) + c1*(s3*(s7*(s4*s6 + c4*c5*c6) + c4*c7*s5) - c3*(c5*c7 - c6*s5*s7)))*(0.00071459151401204201205230592819362*c0 - 0.99999971946341503770128156247665*s0);
    double m12 = - (c1*(c2*c3*(c6*s4 - c4*c5*s6) - s2*(c4*c6 + c5*s4*s6) + c2*s3*s5*s6) - s1*(s3*(c6*s4 - c4*c5*s6) - c3*s5*s6))*(0.49976266860523899104862266540295*c0 + 0.00016261140095402701138092849131311*s0) - (s1*(c2*c3*(c6*s4 - c4*c5*s6) - s2*(c4*c6 + c5*s4*s6) + c2*s3*s5*s6) + c1*(s3*(c6*s4 - c4*c5*s6) - c3*s5*s6))*(0.00071459151401204201205230592819362*c0 - 0.99999971946341503770128156247665*s0) - (0.866162089003864044123304211098*c0 + 0.00073118439827463100558896380576357*s0)*(c2*(c4*c6 + c5*s4*s6) + c3*s2*(c6*s4 - c4*c5*s6) + s2*s3*s5*s6);
    double m13 = (c1*(0.20000000000000001110223024625157*s2 + s2*(0.39000000000000001332267629550188*c4 + 0.077999999999999999888977697537484*c4*c6 + 0.077999999999999999888977697537484*c5*s4*s6 + 0.20000000000000001110223024625157) - c2*c3*(0.39000000000000001332267629550188*s4 + 0.077999999999999999888977697537484*c6*s4 - 0.077999999999999999888977697537484*c4*c5*s6) - 0.077999999999999999888977697537484*c2*s3*s5*s6) + s1*(s3*(0.39000000000000001332267629550188*s4 + 0.077999999999999999888977697537484*c6*s4 - 0.077999999999999999888977697537484*c4*c5*s6) - 0.077999999999999999888977697537484*c3*s5*s6))*(0.49976266860523899104862266540295*c0 + 0.00016261140095402701138092849131311*s0) - 0.00040000000000000001916869440954372*s0 - 0.00088867600000000002754413364058905*c0 + (s1*(0.20000000000000001110223024625157*s2 + s2*(0.39000000000000001332267629550188*c4 + 0.077999999999999999888977697537484*c4*c6 + 0.077999999999999999888977697537484*c5*s4*s6 + 0.20000000000000001110223024625157) - c2*c3*(0.39000000000000001332267629550188*s4 + 0.077999999999999999888977697537484*c6*s4 - 0.077999999999999999888977697537484*c4*c5*s6) - 0.077999999999999999888977697537484*c2*s3*s5*s6) - c1*(s3*(0.39000000000000001332267629550188*s4 + 0.077999999999999999888977697537484*c6*s4 - 0.077999999999999999888977697537484*c4*c5*s6) - 0.077999999999999999888977697537484*c3*s5*s6))*(0.00071459151401204201205230592819362*c0 - 0.99999971946341503770128156247665*s0) - (0.866162089003864044123304211098*c0 + 0.00073118439827463100558896380576357*s0)*(0.20000000000000001110223024625157*c2 + c2*(0.39000000000000001332267629550188*c4 + 0.077999999999999999888977697537484*c4*c6 + 0.077999999999999999888977697537484*c5*s4*s6 + 0.20000000000000001110223024625157) + c3*s2*(0.39000000000000001332267629550188*s4 + 0.077999999999999999888977697537484*c6*s4 - 0.077999999999999999888977697537484*c4*c5*s6) + 0.077999999999999999888977697537484*s2*s3*s5*s6 + 0.31049999999999999822364316059975);
    double m20 = s1*(0.0002245708353780799971122911218302*s2*(c7*(c4*s6 - c5*c6*s4) + s4*s5*s7) - 0.0002245708353780799971122911218302*c2*c3*(c7*(s4*s6 + c4*c5*c6) - c4*s5*s7) + 0.0002245708353780799971122911218302*c2*s3*(c5*s7 + c6*c7*s5)) - c1*(0.86616236851187600187529369577533*s2*(c7*(c4*s6 - c5*c6*s4) + s4*s5*s7) - 0.86616236851187600187529369577533*c2*c3*(c7*(s4*s6 + c4*c5*c6) - c4*s5*s7) + 0.86616236851187600187529369577533*c2*s3*(c5*s7 + c6*c7*s5)) - s1*(0.86616236851187600187529369577533*s3*(c7*(s4*s6 + c4*c5*c6) - c4*s5*s7) + 0.86616236851187600187529369577533*c3*(c5*s7 + c6*c7*s5)) - c2*(0.49976264460425401381371557363309*c7*(c4*s6 - c5*c6*s4) + 0.49976264460425401381371557363309*s4*s5*s7) - c1*(0.0002245708353780799971122911218302*s3*(c7*(s4*s6 + c4*c5*c6) - c4*s5*s7) + 0.0002245708353780799971122911218302*c3*(c5*s7 + c6*c7*s5)) - c3*s2*(0.49976264460425401381371557363309*c7*(s4*s6 + c4*c5*c6) - 0.49976264460425401381371557363309*c4*s5*s7) + s2*s3*(0.49976264460425401381371557363309*c5*s7 + 0.49976264460425401381371557363309*c6*c7*s5);
    double m21 = c1*(0.0002245708353780799971122911218302*s3*(s7*(s4*s6 + c4*c5*c6) + c4*c7*s5) - 0.0002245708353780799971122911218302*c3*(c5*c7 - c6*s5*s7)) - c1*(0.86616236851187600187529369577533*c2*c3*(s7*(s4*s6 + c4*c5*c6) + c4*c7*s5) - 0.86616236851187600187529369577533*s2*(s7*(c4*s6 - c5*c6*s4) - c7*s4*s5) + 0.86616236851187600187529369577533*c2*s3*(c5*c7 - c6*s5*s7)) + s1*(0.86616236851187600187529369577533*s3*(s7*(s4*s6 + c4*c5*c6) + c4*c7*s5) - 0.86616236851187600187529369577533*c3*(c5*c7 - c6*s5*s7)) + c2*(0.49976264460425401381371557363309*s7*(c4*s6 - c5*c6*s4) - 0.49976264460425401381371557363309*c7*s4*s5) + s1*(0.0002245708353780799971122911218302*c2*c3*(s7*(s4*s6 + c4*c5*c6) + c4*c7*s5) - 0.0002245708353780799971122911218302*s2*(s7*(c4*s6 - c5*c6*s4) - c7*s4*s5) + 0.0002245708353780799971122911218302*c2*s3*(c5*c7 - c6*s5*s7)) + c3*s2*(0.49976264460425401381371557363309*s7*(s4*s6 + c4*c5*c6) + 0.49976264460425401381371557363309*c4*c7*s5) + s2*s3*(0.49976264460425401381371557363309*c5*c7 - 0.49976264460425401381371557363309*c6*s5*s7);
    double m22 = s1*(0.0002245708353780799971122911218302*c2*c3*(c6*s4 - c4*c5*s6) - 0.0002245708353780799971122911218302*s2*(c4*c6 + c5*s4*s6) + 0.0002245708353780799971122911218302*c2*s3*s5*s6) + c1*(0.0002245708353780799971122911218302*s3*(c6*s4 - c4*c5*s6) - 0.0002245708353780799971122911218302*c3*s5*s6) + s1*(0.86616236851187600187529369577533*s3*(c6*s4 - c4*c5*s6) - 0.86616236851187600187529369577533*c3*s5*s6) - c1*(0.86616236851187600187529369577533*c2*c3*(c6*s4 - c4*c5*s6) - 0.86616236851187600187529369577533*s2*(c4*c6 + c5*s4*s6) + 0.86616236851187600187529369577533*c2*s3*s5*s6) + c2*(0.49976264460425401381371557363309*c4*c6 + 0.49976264460425401381371557363309*c5*s4*s6) + c3*s2*(0.49976264460425401381371557363309*c6*s4 - 0.49976264460425401381371557363309*c4*c5*s6) + 0.49976264460425401381371557363309*s2*s3*s5*s6;
    double m23 = 0.099952528920850797211627991600835*c2 - s1*(0.000044914167075616001915695345326542*s2 + 0.0002245708353780799971122911218302*s2*(0.39000000000000001332267629550188*c4 + 0.077999999999999999888977697537484*c4*c6 + 0.077999999999999999888977697537484*c5*s4*s6 + 0.20000000000000001110223024625157) - 0.0002245708353780799971122911218302*c2*c3*(0.39000000000000001332267629550188*s4 + 0.077999999999999999888977697537484*c6*s4 - 0.077999999999999999888977697537484*c4*c5*s6) - 0.000017516525159490239749826336293151*c2*s3*s5*s6) + c2*(0.19490743139565907204552501236333*c4 + 0.038981486279131813021985015254661*c4*c6 + 0.038981486279131813021985015254661*c5*s4*s6 + 0.099952528920850808311223063598641) + c1*(0.0002245708353780799971122911218302*s3*(0.39000000000000001332267629550188*s4 + 0.077999999999999999888977697537484*c6*s4 - 0.077999999999999999888977697537484*c4*c5*s6) - 0.000017516525159490239749826336293151*c3*s5*s6) + s1*(0.86616236851187600187529369577533*s3*(0.39000000000000001332267629550188*s4 + 0.077999999999999999888977697537484*c6*s4 - 0.077999999999999999888977697537484*c4*c5*s6) - 0.067560664743926328050109567811901*c3*s5*s6) + c1*(0.17323247370237520999139278501251*s2 + 0.86616236851187600187529369577533*s2*(0.39000000000000001332267629550188*c4 + 0.077999999999999999888977697537484*c4*c6 + 0.077999999999999999888977697537484*c5*s4*s6 + 0.20000000000000001110223024625157) - 0.86616236851187600187529369577533*c2*c3*(0.39000000000000001332267629550188*s4 + 0.077999999999999999888977697537484*c6*s4 - 0.077999999999999999888977697537484*c4*c5*s6) - 0.067560664743926328050109567811901*c2*s3*s5*s6) + c3*s2*(0.19490743139565907204552501236333*s4 + 0.038981486279131813021985015254661*c6*s4 - 0.038981486279131813021985015254661*c4*c5*s6) + 0.03898148627913179675719135275358*s2*s3*s5*s6 + 1.3585263011496200302730130715645;

    double m30 = 0;
    double m31 = 0;
    double m32 = 0;
    double m33 = 1;

    result <<   m00, m01, m02, m03,
                m10, m11, m12, m13,
                m20, m21, m22, m23,
                m30, m31, m32, m33;
}


